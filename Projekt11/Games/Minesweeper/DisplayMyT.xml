<tokens>
<keyword> class </keyword>
<identifier> Display </identifier>
<symbol> { </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawBackground </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> v </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> &lt; </symbol>
<integerConstant> 16 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> h </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> h </identifier>
<symbol> &lt; </symbol>
<integerConstant> 32 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawDitherTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> h </identifier>
<symbol> = </symbol>
<identifier> h </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> let </keyword>
<identifier> v </identifier>
<symbol> = </symbol>
<identifier> v </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawInitialTilemap </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 12 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12 </integerConstant>
<symbol> , </symbol>
<integerConstant> 227 </integerConstant>
<symbol> , </symbol>
<integerConstant> 227 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> v </identifier>
<symbol> = </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> &lt; </symbol>
<integerConstant> 14 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> h </identifier>
<symbol> = </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> h </identifier>
<symbol> &lt; </symbol>
<integerConstant> 14 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawBasicTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> h </identifier>
<symbol> = </symbol>
<identifier> h </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> let </keyword>
<identifier> v </identifier>
<symbol> = </symbol>
<identifier> v </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawControls </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 12 </integerConstant>
<symbol> , </symbol>
<integerConstant> 230 </integerConstant>
<symbol> , </symbol>
<integerConstant> 499 </integerConstant>
<symbol> , </symbol>
<integerConstant> 255 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 13 </integerConstant>
<symbol> , </symbol>
<integerConstant> 231 </integerConstant>
<symbol> , </symbol>
<integerConstant> 498 </integerConstant>
<symbol> , </symbol>
<integerConstant> 254 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 21 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> q  -  quit  |  r  -  restart  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 22 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> wasd ,  arrows  -  move  |  enter ,  space  -  reveal  |  f  -  flag  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawSideMenu </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 230 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12 </integerConstant>
<symbol> , </symbol>
<integerConstant> 499 </integerConstant>
<symbol> , </symbol>
<integerConstant> 227 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 235 </integerConstant>
<symbol> , </symbol>
<integerConstant> 17 </integerConstant>
<symbol> , </symbol>
<integerConstant> 494 </integerConstant>
<symbol> , </symbol>
<integerConstant> 222 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> clearSideMenu </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> false </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 235 </integerConstant>
<symbol> , </symbol>
<integerConstant> 17 </integerConstant>
<symbol> , </symbol>
<integerConstant> 494 </integerConstant>
<symbol> , </symbol>
<integerConstant> 222 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> showStartingScreen </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> char </keyword>
<identifier> key </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> counter </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> counter </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> clearSideMenu </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 8 </integerConstant>
<symbol> , </symbol>
<integerConstant> 32 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<identifier> Minesweeper </identifier>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 10 </integerConstant>
<symbol> , </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> [ </symbol>
<identifier> Press </identifier>
<identifier> any </identifier>
<identifier> Key </identifier>
<symbol> ] </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 11 </integerConstant>
<symbol> , </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> [ </symbol>
<identifier> to </identifier>
<identifier> Start </identifier>
<symbol> ] </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> counter </identifier>
<symbol> = </symbol>
<identifier> counter </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> keyPressed </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<symbol> ~ </symbol>
<symbol> ( </symbol>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> keyPressed </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<identifier> counter </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> showLoosingScreen </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> char </keyword>
<identifier> key </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> counter </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> counter </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> clearSideMenu </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 8 </integerConstant>
<symbol> , </symbol>
<integerConstant> 32 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<identifier> WOMP </identifier>
<identifier> WOMP </identifier>
<identifier> ! </identifier>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 10 </integerConstant>
<symbol> , </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> [ </symbol>
<identifier> Press </identifier>
<identifier> any </identifier>
<identifier> Key </identifier>
<symbol> ] </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 11 </integerConstant>
<symbol> , </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> [ </symbol>
<identifier> to </identifier>
<identifier> try </identifier>
<identifier> again </identifier>
<symbol> ] </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> counter </identifier>
<symbol> = </symbol>
<identifier> counter </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> keyPressed </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<symbol> ~ </symbol>
<symbol> ( </symbol>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> keyPressed </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<identifier> counter </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> showWinningScreen </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> char </keyword>
<identifier> key </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> counter </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> counter </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> clearSideMenu </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 8 </integerConstant>
<symbol> , </symbol>
<integerConstant> 32 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<identifier> Yaaayyyy </identifier>
<identifier> :D </identifier>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<symbol> = </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 10 </integerConstant>
<symbol> , </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> [ </symbol>
<identifier> Press </identifier>
<identifier> any </identifier>
<identifier> Key </identifier>
<symbol> ] </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 11 </integerConstant>
<symbol> , </symbol>
<integerConstant> 33 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant>   </stringConstant>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> [ </symbol>
<identifier> to </identifier>
<identifier> play </identifier>
<identifier> again </identifier>
<symbol> ] </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<symbol> - </symbol>
<stringConstant>   </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> counter </identifier>
<symbol> = </symbol>
<identifier> counter </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> keyPressed </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<symbol> ~ </symbol>
<symbol> ( </symbol>
<identifier> key </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> key </identifier>
<symbol> = </symbol>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> keyPressed </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<identifier> counter </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawGameScreen </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> mines </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> clearSideMenu </identifier>
<symbol> ( </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 240 </integerConstant>
<symbol> , </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 48 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 3 </integerConstant>
<symbol> , </symbol>
<integerConstant> 35 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> Tile beneath Cursor  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 5 </integerConstant>
<symbol> , </symbol>
<integerConstant> 35 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> Mines  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 7 </integerConstant>
<symbol> , </symbol>
<integerConstant> 35 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> Flags set  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 9 </integerConstant>
<symbol> , </symbol>
<integerConstant> 35 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printString </identifier>
<symbol> ( </symbol>
<stringConstant> Tiles revealed  </stringConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 5 </integerConstant>
<symbol> , </symbol>
<integerConstant> 30 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<identifier> mines </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 7 </integerConstant>
<symbol> , </symbol>
<integerConstant> 30 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> moveCursor </identifier>
<symbol> ( </symbol>
<integerConstant> 9 </integerConstant>
<symbol> , </symbol>
<integerConstant> 30 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Output </identifier>
<symbol> . </symbol>
<identifier> printInt </identifier>
<symbol> ( </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawCorrespondingTileAt </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> tile </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> &lt; </symbol>
<integerConstant> 10 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawBasicTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> &lt; </symbol>
<integerConstant> 20 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawFlagTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 20 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawEmptyTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 21 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw1Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 22 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw2Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 23 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw3Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 24 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw4Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 25 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw5Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 26 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw6Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 27 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw7Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 28 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw8Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 29 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawMineTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawCorrespondingCursorAt </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> tile </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> &lt; </symbol>
<integerConstant> 20 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawCursorBasicTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawCursorEmptyTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawArrowDownTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 960 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 832 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 15196 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14196 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 13156 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 6152 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3088 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1568 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 832 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 384 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawArrowRightTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4096 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4096 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4040 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4024 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3944 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3792 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3522 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3070 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2498 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3266 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3696 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3896 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 3976 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4040 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4096 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 4096 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawLeftEdgeTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1366 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 2731 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawTopEdgeTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawDitherTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 21846 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 21845 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawBasicTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 12295 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16383 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16383 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawFlagTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 12295 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 14839 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 14967 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15255 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15159 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 14583 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15351 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15351 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 8447 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16383 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawEmptyTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawMineTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 257 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9545 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 5009 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3809 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12073 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 30685 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 11241 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3809 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 5009 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9545 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 257 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw1Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1921 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1137 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1033 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1145 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7281 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 16377 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw2Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1985 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 6193 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8649 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8777 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4401 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1121 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 6161 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 16377 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw3Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9289 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 10033 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4353 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 10033 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9289 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw4Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2433 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2849 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2705 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 7049 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 14585 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3969 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw5Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 16265 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 137 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 3849 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4209 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8761 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9161 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw6Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8161 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8209 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12169 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12361 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1993 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 6153 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9289 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 10121 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8209 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8161 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw7Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8201 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9209 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8705 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4609 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4353 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2305 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1153 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1153 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1921 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> draw8Tile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4065 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9289 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9097 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9289 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 9289 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 10185 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 4113 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 8177 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawCursorBasicTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 12295 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16375 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15287 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15287 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 14039 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 13655 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 14039 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15287 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 15287 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16383 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 16383 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 7 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawCursorEmptyTile </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> memAddress </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> memAddress </identifier>
<symbol> = </symbol>
<integerConstant> 16384 </integerConstant>
<symbol> + </symbol>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> * </symbol>
<integerConstant> 512 </integerConstant>
<symbol> ) </symbol>
<symbol> + </symbol>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 0 </integerConstant>
<symbol> , </symbol>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 32 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 64 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 96 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 128 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 160 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 192 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 224 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2337 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 256 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2721 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 288 </integerConstant>
<symbol> , </symbol>
<integerConstant> 2337 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 320 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 352 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1089 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 384 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 416 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 448 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Memory </identifier>
<symbol> . </symbol>
<identifier> poke </identifier>
<symbol> ( </symbol>
<identifier> memAddress </identifier>
<symbol> + </symbol>
<integerConstant> 480 </integerConstant>
<symbol> , </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawDebugTilemap </identifier>
<symbol> ( </symbol>
<identifier> Board </identifier>
<identifier> b </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> ; </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> setColor </identifier>
<symbol> ( </symbol>
<keyword> true </keyword>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> do </keyword>
<identifier> Screen </identifier>
<symbol> . </symbol>
<identifier> drawRectangle </identifier>
<symbol> ( </symbol>
<integerConstant> 12 </integerConstant>
<symbol> , </symbol>
<integerConstant> 12 </integerConstant>
<symbol> , </symbol>
<integerConstant> 227 </integerConstant>
<symbol> , </symbol>
<integerConstant> 227 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> v </identifier>
<symbol> = </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> &lt; </symbol>
<integerConstant> 14 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> h </identifier>
<symbol> = </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<keyword> while </keyword>
<symbol> ( </symbol>
<identifier> h </identifier>
<symbol> &lt; </symbol>
<integerConstant> 14 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawDebugTileAt </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> , </symbol>
<identifier> b </identifier>
<symbol> . </symbol>
<identifier> tileAt </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> - </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> h </identifier>
<symbol> = </symbol>
<identifier> h </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> let </keyword>
<identifier> v </identifier>
<symbol> = </symbol>
<identifier> v </identifier>
<symbol> + </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> function </keyword>
<keyword> void </keyword>
<identifier> drawDebugTileAt </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> v </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> h </identifier>
<symbol> , </symbol>
<keyword> int </keyword>
<identifier> tile </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawBasicTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 1 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw1Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 2 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw2Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 3 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw3Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 4 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw4Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 5 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw5Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 6 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw6Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 7 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw7Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 8 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> draw8Tile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> = </symbol>
<integerConstant> 9 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawMineTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> else </keyword>
<symbol> { </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> tile </identifier>
<symbol> &gt; </symbol>
<integerConstant> 19 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> do </keyword>
<identifier> Display </identifier>
<symbol> . </symbol>
<identifier> drawEmptyTile </identifier>
<symbol> ( </symbol>
<identifier> v </identifier>
<symbol> , </symbol>
<identifier> h </identifier>
<symbol> ) </symbol>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>