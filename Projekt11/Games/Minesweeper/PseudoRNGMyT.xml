<tokens>
<keyword> class </keyword>
<identifier> PseudoRNG </identifier>
<symbol> { </symbol>
<keyword> function </keyword>
<keyword> int </keyword>
<identifier> nextRandom </identifier>
<symbol> ( </symbol>
<keyword> int </keyword>
<identifier> oldSeed </identifier>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> seed </identifier>
<symbol> ; </symbol>
<keyword> let </keyword>
<identifier> seed </identifier>
<symbol> = </symbol>
<identifier> Main </identifier>
<symbol> . </symbol>
<identifier> modulo </identifier>
<symbol> ( </symbol>
<symbol> ( </symbol>
<integerConstant> 16645 </integerConstant>
<symbol> * </symbol>
<identifier> oldSeed </identifier>
<symbol> + </symbol>
<integerConstant> 10139 </integerConstant>
<symbol> ) </symbol>
<symbol> , </symbol>
<integerConstant> 7140 </integerConstant>
<symbol> ) </symbol>
<symbol> ; </symbol>
<keyword> if </keyword>
<symbol> ( </symbol>
<identifier> seed </identifier>
<symbol> &lt; </symbol>
<integerConstant> 0 </integerConstant>
<symbol> ) </symbol>
<symbol> { </symbol>
<keyword> let </keyword>
<identifier> seed </identifier>
<symbol> = </symbol>
<identifier> seed </identifier>
<symbol> + </symbol>
<integerConstant> 32767 </integerConstant>
<symbol> ; </symbol>
<symbol> } </symbol>
<keyword> return </keyword>
<identifier> seed </identifier>
<symbol> ; </symbol>
<symbol> } </symbol>
<symbol> } </symbol>
</tokens>